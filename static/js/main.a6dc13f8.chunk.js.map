{"version":3,"sources":["logo.svg","components/timer.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","width","window","innerWidth","height","innerHeight","useState","lenth","setLenth","addEventListener","Math","min","TimerContainer","styled","div","TimerWrapper","isPlaying","duration","size","colors","onClick","console","log","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAAe,I,yCCoDAA,MA3Cf,WAEE,IAAMC,EAAQC,OAAOC,WACfC,EAASF,OAAOG,YAHP,EAISC,mBAAS,KAJlB,mBAITC,EAJS,KAIHC,EAJG,KAMfN,OAAOO,iBAAiB,UAAS,WAAKD,EAASE,KAAKC,IAAIV,EAAMG,GAAQ,OAEtE,IAAMQ,EAAiBC,IAAOC,IAAV,wEAIdC,EAAeF,IAAOC,IAAV,2EACPP,GAMX,OAGE,cAACK,EAAD,UACE,eAACG,EAAD,WACA,cAAC,uBAAD,CACEC,WAAS,EACTC,SAAU,GACVC,KAAM,IACNC,OAAQ,CACN,CAAC,UAAW,KACZ,CAAC,UAAW,KACZ,CAAC,UAAW,QAKd,wBAAQC,QAAS,WAAKC,QAAQC,IAAIf,IAAlC,wBC/BOgB,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,4CCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a6dc13f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useRef, useState } from \"react\";\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nimport styled from 'styled-components';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport { right } from '@popperjs/core';\r\n\r\n\r\n\r\n\r\nfunction Timer() {\r\n\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n  const[lenth,setLenth] = useState(320)\r\n  \r\n  window.addEventListener(\"resize\",()=>{setLenth(Math.min(width,height)-20)})\r\n\r\n  const TimerContainer = styled.div`\r\n    width: 100%;\r\n    min-width: 1100px;\r\n  `\r\n  const TimerWrapper = styled.div`\r\n    width: ${lenth}px;\r\n    \r\n    margin: 0 auto;\r\n  `\r\n\r\n\r\n  return(\r\n   \r\n      \r\n    <TimerContainer>\r\n      <TimerWrapper>\r\n      <CountdownCircleTimer\r\n        isPlaying\r\n        duration={10}\r\n        size={320}\r\n        colors={[\r\n          ['#004777', 0.33],\r\n          ['#F7B801', 0.33],\r\n          ['#A30000', 0.33],\r\n        ]}>\r\n          \r\n          \r\n        </CountdownCircleTimer>\r\n        <button onClick={()=>{console.log(lenth)}}>test</button>\r\n        </TimerWrapper>\r\n      </TimerContainer> \r\n\r\n    \r\n  \r\n  )}\r\nexport default Timer;","import logo from './logo.svg';\nimport './App.css';\nimport Timer from './components/timer.js'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer />\n      <p>testest</p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}